(primatives.ps) run
(geometry.ps) run

(test.ps) run

aposkribh.primatives# begin
aposkribh.geometry# begin

/msc .4 def

 /ff { z 3 add} def
 /z 54 def
 ff =

 [{ff}] 0 get exec ===

/ref [{ff}] def

 /e{
     0 get exec
 }def

/ee{
     e
 }def

ref e =

ref ee =

 

 




/double{
    2 mul
}def

/triple{
    3 mul
}def


/doubleM{
    {double} /doubleDict# memoize
}def

/tripleM{
    {triple} /tripleDict# memoize
}def


clear
2 doubleM =


 3 doubleM =
 4 doubleM =
 5 tripleM =
 2 doubleM  =
 3 doubleM =
 5 doubleM =



(A) =
 /zn .47777777777777777777777777777 def
 (m) =
zn r2s =

clear

/switchDict#{
    <<
        45 {10 23 add}
        %     45 {mmm}
        55 {(fiftey-five)}
        (zn) {/zn 100 store zn}
    >>
}bind def



/equalat { % x y l
    /_l exch def
    /_y exch def
    /_x exch def

    /h _l _l mul dup add sqrt def
    _l =
    h =

    gsave
    newpath
    _x _y translate
    -135 rotate
   % 45 rotate
    0 0 moveto
    0 _l   rlineto
     _l -1 _l mul rlineto
%    _l  0 rlineto
 
    closepath
    stroke
    grestore
}def

%300 300 100 equalat






% 100 100 200 200 141  pointAlongLine{
%     exch dot
% }if

(43) =

/ym 450 def
gsave
newpath
0 ym moveto
888 ym lineto
888 0 lineto
0 0 lineto closepath
.5 .5 .9 setrgbcolor
fill



grestore


gsave
0 ym moveto
1000 0 rlineto
%stroke
grestore

.9 .9 .1 setrgbcolor
newpath
530 700 100 0 360 arc closepath
/pp storePath def
fill

ym msc pp mirror
1 1 .9 setrgbcolor

fill


gsave
50 450 moveto
60 80 rlineto
20 100 rlineto
30 50 rlineto
10 10 rlineto
15 -50 rlineto
60 100 rlineto
30 -100 rlineto
100 150 rlineto
100 -115 rlineto
0 -20 rlineto
600 ym lineto
closepath
/pp storePath def
.4 .5 .4 setrgbcolor
fill

%.95 1 .95 setrgbcolor
%.5 .5 .9 setrgbcolor
.4 .4 .9 setrgbcolor
%1 .9 .9 setrgbcolor
ym msc  pp mirror
fill

gsave
.5 .6 .9 setrgbcolor

0.5 setlinewidth
newpath
230 440 moveto
7 0 rlineto
stroke

newpath
460 445 moveto
7 0 rlineto
stroke

newpath
130 430 moveto
10 0 rlineto
stroke

430 420 moveto
15 0 rlineto
stroke

550 400 moveto
15 0 rlineto
stroke


newpath
80 400 moveto
30 0 rlineto
stroke

newpath
250 410 moveto
30 0 rlineto
stroke



newpath
350 350  moveto
50 0 rlineto
stroke

newpath
400 390  moveto
30 0 rlineto
stroke

2 setlinewidth

newpath
50 300 moveto
100 0 rlineto
stroke

newpath
410 220  moveto
160 0 rlineto
stroke

newpath
150 150  moveto
170 0 rlineto
stroke



quit



newpath
100 100 moveto
0 40 rlineto
40 0 rlineto
0 40 rlineto
40 0 rlineto
150 150 rlineto
100 -100 rlineto

50 -100 rlineto
closepath

/pp storePath def
%stroke

300 350 translate
.7 .7 scale 

%0 1 1 {
0 2 360 {    
    /d exch def
    gsave
    newpath
    d rotate
    pp{
        /a exch def
        a ===
        a /move eq{
            /y exch def
            /x exch def
            x y moveto
            %x d add y  moveto
        }{
            a /line eq{
                /y exch def
                /x exch def
                %x d add y  lineto
                x  y  lineto
            }{
                closepath
            }ifelse
        }ifelse
    }forall

    stroke
    grestore
}for

quit

110 100 510 500   200 10 200 200 linesIntersection
{
    /y exch def
    /x exch def

    gsave
    newpath
    x y 10 0 360 arc closepath
    0 1 0 setrgbcolor
    stroke

    %x y 2 0 360 arc closepath
    0 setgray
    x y dot
    grestore
    
}if

gsave
0 setgray
newpath
% 300 300 3 0 360 arc closepath stroke
% 300 300 30 0 360 arc closepath stroke
% 300 300 60 0 360 arc closepath stroke
% 300 300 90 0 360 arc closepath stroke
% 300 300 140 0 360 arc closepath stroke

0 30 360{
    /a exch def
%    300 300 3 a -1 add pointOnCircleAtAngle moveto
    350 370 30 a pointOnCircleAtAngle moveto
    350 370 125 a 20 add pointOnCircleAtAngle lineto
    350 370 250 a 70 add pointOnCircleAtAngle lineto
%    closepath
    % 300 300 130 a -13 add pointOnCircleAtAngle lineto
    % 300 300 180 a 19 add pointOnCircleAtAngle lineto
    % 300 300 230 a -7 add pointOnCircleAtAngle lineto
    % stroke
    closepath
    gsave
    0 setgray
    fill
    grestore
    0 1 0 setrgbcolor
    stroke
}for

grestore

quit

/circleLine { % ax ay bx by cx,cy,r
    % https://stackoverflow.com/a/49395750
    5 dict begin
    /r exch def
    /cy exch def
    /cx exch def

    /by exch def
    /bx exch def

    /ay exch def
    /ax exch def

    (DISTANCE) =
    /d ax ay bx by distanceBetween2Point def
    d =

    newpath
    ax ay moveto
    bx by lineto
    stroke
    newpath

    cx cy r  0 360 arc closepath
    stroke

    end
}def



0 0 100 134   150 150 75 circleLine





quit

/x 300 def
/y 300 def

(mmmmmmmmmmmmmm) =
0 10 360{
    /a exch def
    
    x y 85.0 a pointOnCircleAtAngle moveto
    x y 150.0 a pointOnCircleAtAngle lineto
    stroke
}for


(mmmmmmmmmmmmmm) =
0 20 360{
    /a exch def
    %x y 50.0 0 pointOnCircleAtAngle dot
    newpath
    x y 20 a pointOnCircleAtAngle moveto
    x y 85 a pointOnCircleAtAngle lineto
    stroke
}for

(mmmmmmmmmmmmmm) =
0 5 360{
    /a exch def
    %x y 50.0 0 pointOnCircleAtAngle dot
    newpath
    x y 150 a pointOnCircleAtAngle moveto
    x y 215 a pointOnCircleAtAngle lineto
    stroke
}for

(mmmmmmmmmmmmmm) =
0 2.5 360{
    /a exch def
    %x y 50.0 0 pointOnCircleAtAngle dot
    newpath
    x y 215 a pointOnCircleAtAngle moveto
    x y 280 a pointOnCircleAtAngle lineto
    stroke
}for

(mmmmmmmmmmmmmm) =
0 1.25 360{
    /a exch def
    %x y 50.0 0 pointOnCircleAtAngle dot
    newpath
    x y 280 a pointOnCircleAtAngle moveto
    x y 345 a pointOnCircleAtAngle lineto
    stroke
}for

(mmmmmmmmmmmmmm) =
0 .625 360{
    /a exch def
    %x y 50.0 0 pointOnCircleAtAngle dot
    newpath
    x y 345 a pointOnCircleAtAngle moveto
    x y 410 a pointOnCircleAtAngle lineto
    stroke
}for


    

(mmmmmmmmmmmmmm) =



quit

%345 switchDict#  [{(Unknown)}] switch =

%45 switchDict#  [{(Unknown)}] switch =

(zn) switchDict#  [{(Unknown)}] switch =

{zn} {zn} eq =



[45 345 55] switchDict#  [{(Unknown)}] nswitch =

[45 345 55] [45 345 55] eq =







clear

mark (A) (BB) (CCC) strcatmark =

mark (A) (BB) (DDD) verbose2



100 i2s =
10 i2s =
1 i2s =
0 i2s =

clear
stack
(7777777777777) =
(A) (B)  <<>>  3 stack2array

end % aposkribh_primatives# 



