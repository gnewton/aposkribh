(primatives.ps) run

(test.ps) run

aposkribh_primatives# begin



 /ff { z 3 add} def
 /z 54 def
 ff =

 [{ff}] 0 get exec ===

/ref [{ff}] def

 /e{
     0 get exec
 }def

/ee{
     e
 }def

ref e =

ref ee =

 

 




/double{
    2 mul
}def

/triple{
    3 mul
}def


/doubleM{
    {double} /doubleDict# memoize
}def

/tripleM{
    {triple} /tripleDict# memoize
}def


clear
2 doubleM =


 3 doubleM =
 4 doubleM =
 5 tripleM =
 2 doubleM  =
 3 doubleM =
 5 doubleM =



(A) =
 /zn .47777777777777777777777777777 def
 (m) =
zn r2s =

clear

/switchDict#{
    <<
        45 {10 23 add}
        %     45 {mmm}
        55 {(fiftey-five)}
        (zn) {/zn 100 store zn}
    >>
}bind def

%345 switchDict#  [{(Unknown)}] switch =

%45 switchDict#  [{(Unknown)}] switch =

(zn) switchDict#  [{(Unknown)}] switch =

{zn} {zn} eq =


quit
[45 345 55] switchDict#  [{(Unknown)}] nswitch =

[45 345 55] [45 345 55] eq =

quit





clear

mark (A) (BB) (CCC) strcatmark =

mark (A) (BB) (DDD) verbose2



100 i2s =
10 i2s =
1 i2s =
0 i2s =

clear
stack
(7777777777777) =
(A) (B)  <<>>  3 stack2array

end % aposkribh_primatives# 
