
(raw.ps) run


aposkribh.raw# begin


clear

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% No errors Case #1
[
     [ (toString) { true toString}               [(true)] ]  
     [ (toString) { true toString}               [(true)] ]
     [ (toString) { 45.5 toString }              [(45.5)] ]
     [ (toString) { (foo) toString }             [(foo)]  ]
     [ (toString) { /foo toString }              [(/foo)] ]     
     [ (toString) { <<>> toString }              [(/dicttype)] ]
     [ (toString) { << 23 45>> toString }        [(/dicttype)] ]
     [ (toString) { null toString }              [(null)]      ]
     [ (concatstrings) { (a-)(b)  concatstrings} [(a-b)]       ]
     [ (add)      { 2 1 add }                    [3]           ]
     [ (add)      { 2 1 add pop }                []            ]
     [ (requires) { [/add /sub /mul] /thisProc requires } []   ]
     [ (toPSString) { 23 toPSString } [(23)]   ]
     [ (toPSString) { 23.0 toPSString } [(23.0)]   ]
     [ (toPSString) { /foo toPSString } [(/foo)]   ]
     [ (toPSString) { [1 2 3] toPSString } [([1 2 3])]   ]
     [ (toPSString) { true toPSString } [(true)]   ]
     [ (toPSString) { null toPSString } [(/null)]   ]
     [ (spaces) { 2 spaces } [(  )]   ]
     [ (arrayMatchesStack) { 1 2 3 [3 2 1] arrayMatchesStack} [true 3 2 1] ]
     [ (strcatmark) { mark (A)(B)(2) strcatmark}  [ (AB2) ]  ]
     [ (equals) { 5 5 equals}  [ true ]  ]
     [ (equals) { 2 5 equals}  [ false ]  ]
     [ (equals) { (m) 5 equals}  [ false ]  ]
     [ (arrayEqualsArray)     {[2] [2] arrayEqualsArray}   [true] ]
     [ (arrayEqualsArray)     {[] [2] arrayEqualsArray}   [false] ]
     [ (arrayEqualsArray)     {[3] [2] arrayEqualsArray}   [false] ]

     
]expectCorrectResultsN



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Errors
% execution errors Case #2
[
    [ (add)      { 1  add}                 /stackunderflow ]
    [ (add)      {  add }                  /stackunderflow ]
    [ (add)      { (f) 1 add }             /typecheck      ]
    [ (toString) { 43 xtoString }          /undefined      ]
    [ (requires) { [/foo /bar /counters#]  /thisProc requires } /undefined]
    [ (requires) { [/foo]  /add requires } /undefined      ]
    [ (requires) { 32  /add requires }     /typecheck      ]
    [ (strcatmark) { (A)(B)(2) strcatmark} /unmatchedmark  ]
    [ (equals)     { equals}               /stackunderflow ]
    [ (equals)     { 2 equals}               /stackunderflow ]
    [ (arrayEqualsArray)     { 2 arrayEqualsArray}    /stackunderflow ]
    [ (arrayEqualsArray)     {2 2 arrayEqualsArray}   /typecheck ]
    
]expectExecutionErrorsN



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Results errors Case #3: Results errors
[
    [ (add)      { 2 1 add }     [33]  ]
    [ (add)      { 2 1 add }     [(3)]]
    [ (add)      { 2 1 add }     [45] ]
    [ (toString) { 43 toString } [(439)] ]
    [ (toString) { 43 toString } []   ]
    [ (spaces) { 2 spaces } [(   )]   ]
    [ (strcatmark) { mark (A)(B)(2) strcatmark} [] ]
] expectIncorrectResultsN
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


end % aposkribh.raw#



