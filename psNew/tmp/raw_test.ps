
(raw.ps) run


aposkribh.raw# begin

clear

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% No errors Case #1
(toString) { 43 toString }                          [(43)]  null expect

(add)      { 2 1 add }                               [3]     null expect
(add)      { 2 1 add pop }                               []     null expect
                    
(mustExist) { [/add /sub /mul] /thisProc mustExist } [] null expect

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Errors
% execution errors Case #2
(add)      { 1  add }          null /stackunderflow expect
(add)      {  add }        null /stackunderflow expect
(add)      { (f) 1 add }    null /typecheck      expect
(toString) { 43 xtoString } null /undefined      expect

(mustExist) { [/foo /bar /counters#] /thisProc mustExist } null /undefined expect

% Results errors Case #3
(add)      { 2 1 add }     [(3)] /typecheck      expect
(add)      { 2 1 add }     [45]  /typecheck      expect
(toString) { 43 toString } [43]  /typecheck      expect
(toString) { 43 toString } []    /stackunderflow expect

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%



end % aposkribh.raw#
