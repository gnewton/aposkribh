
(init.ps START) =

/aposkribh.libraryLoader_VERBOSE where not{
    /aposkribh.libraryLoader_VERBOSE true def  % EDIT
}{
    pop % throw away the found dict
}ifelse

/aposkribh.libraryLoader_VERBOSE_LOADING_ONLY where not{
    /aposkribh.libraryLoader_VERBOSE_LOADING_ONLY true def   %% EDIT
}{
    pop % throw away the found dict
}ifelse


(init_utils.ps) run

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% All files start with this %%%%%%%%%
% filename, array of to-be-laoded filenames; on stack

0 index type /arraytype ne{
    0 index type =
    (init.ps: First arg not /stringtype) /typecheck signalerror
}if

1 index type /stringtype ne{
    1 index type =
    (init.ps: 2nd arg not /stringtype) /typecheck signalerror
}if

/psfilenames exch def
/filename exch def

/aposkribh.PSFile where not{
    /aposkribh.PSFile 1 array def
    aposkribh.PSFile 0 filename put
    aposkribh.libraryLoader_VERBOSE{
        aposkribh.libraryLoader_VERBOSE_LOADING_ONLY not{
            aposkribh.PSFile aposkribh.cat ( START) concatstrings =
        }if
    }if
}{
    pop
    /aposkribh.PSFile aposkribh.PSFile filename aposkribh.append store
    aposkribh.libraryLoader_VERBOSE{
        aposkribh.libraryLoader_VERBOSE_LOADING_ONLY not{
            aposkribh.PSFile aposkribh.cat ( START) concatstrings =
            aposkribh.location ( ###START) concatstrings =
        }if
    }if
}ifelse

(init.ps) psfilenames aposkribh.run

currentdict /psfilenames undef
currentdict /filename undef


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


/aposkribh.unappend{ % array -> array with last element removed
    count 0 eq{
        (/unappend: Needs 1 arg: array) /stackunderflow signalerror
    }def
    0 index type /arraytype ne{
        (/unappend: Arg not /arraytype) /typecheck
    }if
    %
    1 dict begin
    /_a exch def

    _a length 0 eq{
        _a % Return empty []
    }{
        /$newArray _a length 1 sub array def

        0 1 _a length 2 sub{
            /i exch def
            $newArray i _a i get  put
        }for

        $newArray
    }ifelse
    
    end

}bind def





/aposkribh.PSFile,LOG{

}bind def

/aposkribh.PSFile.END{
    aposkribh.libraryLoader_VERBOSE{
        aposkribh.libraryLoader_VERBOSE_LOADING_ONLY not{
            aposkribh.PSFile aposkribh.cat ( --END) concatstrings =
        }if
        aposkribh.PSFile length 0 eq{
            () =
        }if
    }if
    /aposkribh.PSFile aposkribh.PSFile aposkribh.unappend store
}bind def

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% This is run




count 0 ne{
    (--) =
    stack
    (--) =
    (init.ps: stack is not empty) /stackunderflow signalerror
}if

%( ZZZ init.ps END) =

(init.ps END) =
