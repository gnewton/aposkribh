
% Dict for recording loaded files
 /aposkribh.libraryLoader_LOADED_FILES# where not{
     /aposkribh.libraryLoader_LOADED_FILES# <<>> def  % EDIT
 }{
     pop % throw away the found dict
 }ifelse

 % Verbose output in library loading
/aposkribh.libraryLoader_VERBOSE where not{
    /aposkribh.libraryLoader_VERBOSE true def  % EDIT
}{
    pop % throw away the found dict
}ifelse

/aposkribh.libraryLoader_VERBOSE_LOADING_ONLY where not{
    /aposkribh.libraryLoader_VERBOSE_LOADING_ONLY true def   %% EDIT
}{
    pop % throw away the found dict
}ifelse


(init_utils.ps) run

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% All files start with this %%%%%%%%%
% filename, array of to-be-loaded filenames; on stack

% This deals with the array of filenames passed 
0 index type /arraytype ne{
    0 index type =
    (init.ps: First arg not /stringtype) /typecheck signalerror
}if

1 index type /stringtype ne{
    1 index type =
    (init.ps: 2nd arg not /stringtype) /typecheck signalerror
}if

%%%%

% Start of init.ps
% Expects ps-file-to-load, array of filename dependencies
/psfilenames exch def
/sourcefilename exch def

% aposkribh.PSFile collects all the PS files that are called
/aposkribh.PSFile where not{
    /aposkribh.PSFile 1 array def
    aposkribh.PSFile 0 sourcefilename put
    aposkribh.libraryLoader_VERBOSE{
        aposkribh.libraryLoader_VERBOSE_LOADING_ONLY not{
            aposkribh.PSFile aposkribh.cat ( START) concatstrings =
        }if
    }if
}{
    pop
    /aposkribh.PSFile aposkribh.PSFile sourcefilename aposkribh.append store
    aposkribh.libraryLoader_VERBOSE{
        aposkribh.libraryLoader_VERBOSE_LOADING_ONLY not{
            aposkribh.PSFile aposkribh.cat ( START) concatstrings =
            aposkribh.location ( ###START) concatstrings =
        }if
    }if
}ifelse

(init.ps) psfilenames aposkribh.run

% Cleanup: Undefine local variables
currentdict /psfilenames undef
currentdict /sourcefilename undef

% end of init.ps
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%







/nnaposkribh.PSFile,LOG{

}bind def

/aposkribh.PSFile.END{
    aposkribh.libraryLoader_VERBOSE{
        aposkribh.libraryLoader_VERBOSE_LOADING_ONLY not{
            aposkribh.PSFile aposkribh.cat ( --END) concatstrings =
        }if
        aposkribh.PSFile length 0 eq{
            () =
        }if
    }if
    /aposkribh.PSFile aposkribh.PSFile aposkribh.unappend store
}bind def

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% This is run




count 0 ne{
    (--) =
    stack
    (--) =
    (init.ps: stack is not empty) /stackunderflow signalerror
}if

