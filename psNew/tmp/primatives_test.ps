

(primatives.ps) run

(test.ps) run

aposkribh.primatives# begin
aposkribh.test# begin

/aposkribh.Testing true store

/test.primatives# 20 dict def



test.primatives# begin


/checkArgs.Tests{
    { 32.2 [/integertype] (checkArgs)  checkArgs   }    /typecheck       test.E
    { [/integertype] (checkArgs) checkArgs         }    /stackunderflow  test.E
    { true [/stringtype] (checkArgs) checkArgs     }    /typecheck       test.E
    { 1 [/stringtype] (checkArgs) checkArgs        }    /typecheck       test.E
    { (foo)  <<>> (checkArgs)    checkArgs         }    /typecheck       test.E
    { (o) [/integertype] (checkArgs) checkArgs     }    /typecheck       test.E
    
    
    { 32 [/integertype] (checkArgs)  checkArgs                 }   [32]      test.V
%    { 32 [/numbertype] (checkArgs)  checkArgs                 }   [32]      test.V
    { 32 44 [/integertype /integertype]  (checkArgs) checkArgs }   [44 32]   test.V
}bind def


/strcatmark.Tests{
    { (32.2) (strcatmark)  strcatmark     }      /unmatchedmark  test.E
    { mark 32  (strcatmark)  strcatmark   }      /typecheck      test.E
    { mark /foo  (strcatmark)  strcatmark }      /typecheck      test.E
}bind def


/checkArgs2.Tests{
    { 32 [/numbertype] (checkArgs)  checkArgs2 }   [32]      test.V
    { 32 [/integertype] (checkArgs)  checkArgs2 }   [32]      test.V
    { 32 45 66 [/integertype /integertype /integertype] (checkArgs)  checkArgs2 }   [66 45 32]      test.V
}def

end % test.primatives# begin


test.primatives# {
    %exch pop
    exch ===
    exec
}forall


end % aposkribh_test#
end % aposkribh_primatives# 



% (TEST primatives_test.ps END) =
% (----------------------------------------------------------------------------------) =
% () =
