

(primatives.ps) run

(test.ps) run

aposkribh_primatives# begin
aposkribh_test# begin


/checkArgs_Tests{
    (% START checkArgsTests) =
    (%% Negative tests) =



    clear

    {
        32.2 [/integertype] (checkArgs)  checkArgs
    }assertError
    (/checkArgs: /real instead of /integertype) runTest


    clear
    {
        [/integertype] (checkArgs) checkArgs
    }assertError
    (/checkArgs: Empty array) runTest



    clear
    {
        %<<>> <<>> checkArgs
        (foo)  <<>> (checkArgs) checkArgs 
    }assertError
    (/checkArgs: 0 arg not array) runTest




    clear
    {
        (foo)     [/integertype] (checkArgs) checkArgs
    }assertError
    (/checkArgs: Actual arg 1 not integer) runTest

    clear
    {
        (foo) (foo) [/integertype /stringtype] (procName) checkArgs
    }assertError
    (/checkArgs: Actual 1 arg not integer) runTest

    
    
    (%% Positive tests) =

    clear
    {
        (foo) 32   [/integertype /stringtype] (procName) checkArgs
    }assertNotError
    (/checkArgs: mmmm Actual 1 arg not integer) runTest

    clear
    {
         [] (checkArgs) checkArgs
    }assertNotError
    (/checkArgs: No args in args type array) runTest


    
    (% END checkArgsTests) =

}def

checkArgs_Tests


end % aposkribh_test#
end % aposkribh_primatives# 
