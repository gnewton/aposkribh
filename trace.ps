
(trace.ps) _aposkribh_fileStart

/github.com.gnewton.aposkribh.trace 100 dict def

github.com.gnewton.aposkribh.util begin
github.com.gnewton.aposkribh.simple begin
github.com.gnewton.aposkribh.trace begin




% Public
/traceOn{

}def

/traceOff{

}def

/trace{ %procname proc
    /trace 2 assertMinStackSize
    (trance START) =
    10 dict begin
    /procName exch def  % Name of proc being traced
    procName isString? not{
        (/trace: internal error: procName must be a string) testErrOut
        quit
    }if

    /proc exch def % Procedure to test
    /proc isProc? not{
         (Error: github.com.gnewton.aposkribh.trace/trace: proc is not executable. Fix your test.) testErrOut
         procName testErrOut
         quit
     }if

    %%% body
    
    % TODO: add procName, startTime into traceArray
    proc
    % TODO:  add endTime into traceEndDict: key startTime: value endTime

}def




/traceArray 100 def


end % github.com.gnewton.aposkribh.trace
end %github.com.gnewton.aposkribh.simple
end %github.com.gnewton.aposkribh.util

(trace.ps) _aposkribh_fileEnd
