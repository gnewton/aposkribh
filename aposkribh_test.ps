(aposkribh.ps) run
(simple.ps) run

github.com.gnewton.aposkribh begin

github.com.gnewton.aposkribh.simpletest begin


initTesting


% 454 /isIntegerRealStringBool 1
% /assertMinStackSize (assertMinStackSize: 1 arg) AssertPass

% 324 (765) /isIntegerRealStringBool 2
% /assertMinStackSize (assertMinStackSize: 2 args) AssertPass

% /isIntegerRealStringBool 0
% /assertMinStackSize (assertMinStackSize: 0 args) AssertPass

% /isIntegerRealStringBool 2
% /assertMinStackSize  (assertMinStackSize: 0 args: need 2) AssertFail

% 565 /isIntegerRealStringBool 2 /assertMinStackSize  (assertMinStackSize: 1 arg: need 2) AssertFail




(***********)=
% Should passes
clear
(foo) isIntegerRealStringBool

(foo) /isIntegerRealStringBool (isIntegerRealStringBool: Single string) AssertPass


22.0 /isIntegerRealStringBool (isIntegerRealStringBool: Single real) AssertPass
true /isIntegerRealStringBool (isIntegerRealStringBool: Single bool) AssertPass

/isIntegerRealStringBool (isIntegerRealStringBool: No argument) AssertFail

(======================================================) =

% These are tests that are broken (bad setup)
{
    10 10 (isIntegerRealStringBool: Single integer) AssertFail  % bad proc
}
stopped 
{
    % This should happen
}
{
    % This should not happen
    (Should have been a test setup error) =
}ifelse


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Postscript /add tests
(----------------------------_) =
clear
/add (/add: No args) AssertFail
10 /add (/add: Missing one arg) AssertFail
10 10 /add (/add: Two ints) AssertPass
(foo) 10 /add (/add: one string) AssertFail
10.0 10 /add (/add: one real) AssertPass




end % github.com.gnewton.aposkribh.simpletest
end % github.com.gnewton.aposkribh

